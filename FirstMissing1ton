class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < nums.length; ++i) {
            int index = Math.abs(nums[i])-1;
            if (nums[index] < 0)
                res.add(Math.abs(index+1));
            nums[index] = -nums[index];
        }
        return res;
    }
}
//Make each nums element as negative by traversing through it since numbers are from 1 to n  if any repeated element is present it will result in negative element of nums[i]
//that is your answer
// [4,3,2,7,8,2,3,1]
//index=4-1 =3
// [4,3,2,-7,8,2,3,1]
//index = 3-1 =2
//[4,3,-2,-7,8,2,3,1]
//index= 2-1 =1
//[4,-3,-2,-7,8,2,3,1]
//index =7-1 =6
// [4,-3,-2,-7,8,2,3,1]
//index=8-1 =7
// [4,-3,-2,-7,8,2,-3,1]
//index = 2-1 =1 
//[4,-3,-2,-7,8,2,-3,1]
//nums[1] is -ve = ans
//indedx =3-1 =2
//num[2] is -ve = ans
//[4,-3,-2,-7,8,2,-3,1]
...
